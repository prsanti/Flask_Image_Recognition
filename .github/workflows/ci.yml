name: CI

env:
  PYTHON_VERSION: '3.10'

on:
  push:
    branches:
      - main  # Run on pushes made into the main branch
  pull_request:
    branches:
      - main  # Run on pull requests targeting the main branch

jobs:
  lint:
    runs-on: ubuntu-latest  # Specify the OS to run the job

    steps:
      - uses: actions/checkout@v4  # Checks out your repository's code

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      - name: Analysing code with pylint
        run: |
          pylint $(git ls-files '*.py')
    
  test:
    runs-on: ubuntu-latest  # Specify the OS to run the job

    steps:
      - uses: actions/checkout@v4  # Checks out your repository's code

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          # If the key matches the cache, it won't download the dependencies again, so CI can run more efficiently
          key: ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys:
            ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install your project dependencies
          pip install pytest

      - name: Run tests
        run: |
          pytest

